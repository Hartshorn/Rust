{"filter":false,"title":"circle.rs","tooltip":"/method_syntax/shapes/circle.rs","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":51,"column":1},"action":"insert","lines":["use std::f64::consts;","","struct Circle {","    x: f64,","    y: f64,","    radius: f64,","}","","impl Circle {","    fn new(x: f64, y: f64, radius: f64) -> Circle {","        Circle {","            x: x,","            y: y,","            radius: radius,","        }","    }","","    fn area(&self) -> f64 {","        consts::PI * (self.radius * self.radius)","    }","    ","    fn grow(&self) -> Circle {","        Circle { x: self.x, y: self.y, radius: (self.radius * 10.0) }","    }","}","","struct CircleBuilder {","    coordinate_x: f64,","    coordinate_y: f64,","    radius: f64,","}","","impl CircleBuilder {","    fn new() -> CircleBuilder {","        CircleBuilder { coordinate_x: 0.0, coordinate_y: 0.0, radius: 1.0 }","    }","    ","    fn coordinate(&mut self, coordinate_x: f64, coordinate_y: f64) -> &mut CircleBuilder {","        self.coordinate_x = coordinate_x;","        self.coordinate_y = coordinate_y;","        self","    }","    ","    fn radius(&mut self, radius: f64) -> &mut CircleBuilder {","        self.radius = radius;","        self","    }","    ","    fn finalize(&self) -> Circle {","        Circle { x: self.coordinate_x, y: self.coordinate_y, radius: self.radius }","    }","}"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":51,"column":1},"end":{"row":51,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1425932124470,"hash":"14d11fdfc0bbf60f6a76028483af4d191dd115e0"}